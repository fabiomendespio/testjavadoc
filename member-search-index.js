memberSearchIndex = [{"p":"kernel","c":"NeuralNetwork","l":"addLayer(int, Layer)","u":"addLayer(int,kernel.Layer)"},{"p":"kernel","c":"NeuralNetwork","l":"addLayer(Layer)","u":"addLayer(kernel.Layer)"},{"p":"kernel","c":"Layer","l":"addNeuron(int, Neuron)","u":"addNeuron(int,kernel.Neuron)"},{"p":"kernel","c":"Layer","l":"addNeuron(Neuron)","u":"addNeuron(kernel.Neuron)"},{"p":"kernel","c":"Neuron","l":"addOutputConnection(Neuron)","u":"addOutputConnection(kernel.Neuron)"},{"p":"kernel","c":"Neuron","l":"addValue(double)"},{"p":"network.and","c":"And","l":"And()","u":"%3Cinit%3E()"},{"p":"network.and","c":"ANDInputSamples","l":"ANDInputSamples(ArrayList<ArrayList<Double>>)","u":"%3Cinit%3E(java.util.ArrayList)"},{"p":"network.and","c":"ANDOutput","l":"ANDOutput()","u":"%3Cinit%3E()"},{"p":"kernel","c":"NeuralNetwork","l":"attachInput(Input)","u":"attachInput(kernel.Input)"},{"p":"kernel","c":"NeuralNetwork","l":"attachOutput(Output)","u":"attachOutput(kernel.Output)"},{"p":"operations","c":"TrainingStrategy","l":"BACKPROPAGATION"},{"p":"network","c":"MultiLayerPerceptron","l":"backPropagation()"},{"p":"operations","c":"TrainingNetwork","l":"backPropagation()"},{"p":"activationfunctions","c":"Sigmoid","l":"calculate(double)"},{"p":"activationfunctions","c":"Step","l":"calculate(double)"},{"p":"interfaces","c":"ActivationFunction","l":"calculate(double)"},{"p":"kernel","c":"NeuralNetwork","l":"checkIntegrity()"},{"p":"kernel","c":"Layer","l":"checkNeuronsActivation()"},{"p":"kernel","c":"Layer","l":"clearAllConnections()"},{"p":"kernel","c":"Neuron","l":"clearConnections()"},{"p":"kernel","c":"Connection","l":"Connection()","u":"%3Cinit%3E()"},{"p":"kernel","c":"Connection","l":"Connection(double)","u":"%3Cinit%3E(double)"},{"p":"kernel","c":"Connection","l":"Connection(Neuron, Neuron)","u":"%3Cinit%3E(kernel.Neuron,kernel.Neuron)"},{"p":"kernel","c":"Connection","l":"Connection(Neuron, Neuron, double)","u":"%3Cinit%3E(kernel.Neuron,kernel.Neuron,double)"},{"p":"kernel","c":"Input","l":"convertToLayer()"},{"p":"Utils","c":"PixelCalc","l":"Dados()"},{"p":"Utils","c":"PixelCalc","l":"defaultImage()"},{"p":"kernel","c":"Output","l":"defineOuput()"},{"p":"network.and","c":"ANDOutput","l":"defineOuput()"},{"p":"network.mnist","c":"MNISTOutput","l":"defineOuput()"},{"p":"activationfunctions","c":"Sigmoid","l":"derivate(double)"},{"p":"activationfunctions","c":"Step","l":"derivate(double)"},{"p":"interfaces","c":"ActivationFunction","l":"derivate(double)"},{"p":"network","c":"MultiLayerPerceptron","l":"feedForward()"},{"p":"operations","c":"TrainingNetwork","l":"feedForward()"},{"p":"operations","c":"InputSamples","l":"findMax()"},{"p":"operations","c":"InputSamples","l":"findMin()"},{"p":"report","c":"Report","l":"generateReport()"},{"p":"kernel","c":"Neuron","l":"getActivateValue()"},{"p":"kernel","c":"Layer","l":"getActivationFunction()"},{"p":"kernel","c":"Neuron","l":"getActivationFunction()"},{"p":"kernel","c":"Layer","l":"getActivationFunction(int)"},{"p":"network.and","c":"And","l":"getAllANDData()"},{"p":"network.mnist","c":"Mnist","l":"getAllMnistData()"},{"p":"report","c":"PlotGraphics","l":"getData()"},{"p":"report","c":"PTrainingData","l":"getEpoch()"},{"p":"report","c":"PTrainingData","l":"getErrorSummary()"},{"p":"report","c":"Report","l":"getErrorTracking()"},{"p":"kernel","c":"Output","l":"getExpectedValue()"},{"p":"network.mnist","c":"MNISTOutput","l":"getExpectedValue()"},{"p":"report","c":"Report","l":"getFontSize()"},{"p":"kernel","c":"Connection","l":"getFromNeuron()"},{"p":"report","c":"Report","l":"getGraphResolution()"},{"p":"report","c":"PlotGraphics","l":"getH()"},{"p":"operations","c":"InputSamples","l":"getIndex()"},{"p":"operations","c":"InputSamples","l":"getInput()"},{"p":"interfaces","c":"Input","l":"getInput(ArrayList<Number>, double, double)","u":"getInput(java.util.ArrayList,double,double)"},{"p":"kernel","c":"NeuralNetwork","l":"getLabel()"},{"p":"kernel","c":"Neuron","l":"getLabel()"},{"p":"network.mnist","c":"Mnist","l":"getLabels()"},{"p":"kernel","c":"Input","l":"getLayer()"},{"p":"kernel","c":"Output","l":"getLayer()"},{"p":"kernel","c":"NeuralNetwork","l":"getLayers()"},{"p":"kernel","c":"NeuralNetwork","l":"getLayersCount()"},{"p":"operations","c":"InputSamples","l":"getMax()"},{"p":"kernel","c":"Input","l":"getMaxValue()"},{"p":"operations","c":"InputSamples","l":"getMin()"},{"p":"kernel","c":"Input","l":"getMinValue()"},{"p":"activationfunctions","c":"Sigmoid","l":"getName()"},{"p":"activationfunctions","c":"Step","l":"getName()"},{"p":"interfaces","c":"ActivationFunction","l":"getName()"},{"p":"kernel","c":"Layer","l":"getNeuronAt(int)"},{"p":"kernel","c":"Layer","l":"getNeurons()"},{"p":"kernel","c":"Layer","l":"getNeuronsCount()"},{"p":"report","c":"PTrainingData","l":"getNewEpochProbability()"},{"p":"kernel","c":"Input","l":"getNormalizedInput()"},{"p":"kernel","c":"Input","l":"getNormalizedInput(ArrayList<Double>)","u":"getNormalizedInput(java.util.ArrayList)"},{"p":"kernel","c":"Input","l":"getNormalizedInput(ArrayList<Number>, double, double)","u":"getNormalizedInput(java.util.ArrayList,double,double)"},{"p":"interfaces","c":"Output","l":"getOuput()"},{"p":"kernel","c":"Neuron","l":"getOutConnections()"},{"p":"kernel","c":"Neuron","l":"getOutput()"},{"p":"kernel","c":"Connection","l":"getOutputFromNeuron()"},{"p":"Utils","c":"PixelCalc","l":"getPixels_height()"},{"p":"Utils","c":"PixelCalc","l":"getPixels_width()"},{"p":"report","c":"PlotGraphics","l":"getPlot()"},{"p":"Utils","c":"PixelCalc","l":"getRatio_height()"},{"p":"Utils","c":"PixelCalc","l":"getRatio_width()"},{"p":"report","c":"PlotGraphics","l":"getRender()"},{"p":"operations","c":"TrainingNetwork","l":"getReport()"},{"p":"operations","c":"InputSamples","l":"getSample(int)"},{"p":"operations","c":"InputSamples","l":"getSamples()"},{"p":"report","c":"Report","l":"getTimeComparison()"},{"p":"report","c":"PTrainingData","l":"getTimestamp()"},{"p":"report","c":"PlotGraphics","l":"getTitle()"},{"p":"kernel","c":"Connection","l":"getToNeuron()"},{"p":"operations","c":"TrainingNetwork","l":"getTrainingStrategies()"},{"p":"operations","c":"TrainingNetwork","l":"getTypeOfLearning()"},{"p":"report","c":"PlotGraphics","l":"getU()"},{"p":"kernel","c":"Neuron","l":"getValue()"},{"p":"kernel","c":"Input","l":"getValues()"},{"p":"report","c":"PlotGraphics","l":"getW()"},{"p":"kernel","c":"Connection","l":"getWeightValue()"},{"p":"report","c":"PTrainingData","l":"getWeightVariationByLayer()"},{"p":"report","c":"PlotGraphics","l":"getxLabel()"},{"p":"report","c":"PlotGraphics","l":"getyLabel()"},{"p":"kernel","c":"Neuron","l":"hasOutputConnectionTo(Neuron)","u":"hasOutputConnectionTo(kernel.Neuron)"},{"p":"kernel","c":"NeuralNetwork","l":"indexOf(Layer)","u":"indexOf(kernel.Layer)"},{"p":"kernel","c":"Layer","l":"indexOf(Neuron)","u":"indexOf(kernel.Neuron)"},{"p":"kernel","c":"Input","l":"Input(ArrayList<Double>)","u":"%3Cinit%3E(java.util.ArrayList)"},{"p":"kernel","c":"Input","l":"inputLayer"},{"p":"operations","c":"InputSamples","l":"InputSamples(ArrayList<ArrayList<Double>>)","u":"%3Cinit%3E(java.util.ArrayList)"},{"p":"kernel","c":"Layer","l":"isEmpty()"},{"p":"kernel","c":"Layer","l":"Layer()","u":"%3Cinit%3E()"},{"p":"kernel","c":"Layer","l":"Layer(int)","u":"%3Cinit%3E(int)"},{"p":"kernel","c":"Layer","l":"Layer(int, ActivationFunction)","u":"%3Cinit%3E(int,interfaces.ActivationFunction)"},{"p":"main","c":"Main","l":"Main()","u":"%3Cinit%3E()"},{"p":"main","c":"Main","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"report","c":"PlotGraphics","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"network.mnist","c":"Mnist","l":"Mnist()","u":"%3Cinit%3E()"},{"p":"network.mnist","c":"MNISTInputSamples","l":"MNISTInputSamples(ArrayList<ArrayList<Double>>)","u":"%3Cinit%3E(java.util.ArrayList)"},{"p":"network.mnist","c":"MNISTOutput","l":"MNISTOutput()","u":"%3Cinit%3E()"},{"p":"network.mnist","c":"MNISTOutput","l":"MNISTOutput(Layer)","u":"%3Cinit%3E(kernel.Layer)"},{"p":"network","c":"MultiLayerPerceptron","l":"MultiLayerPerceptron(NeuralNetwork)","u":"%3Cinit%3E(kernel.NeuralNetwork)"},{"p":"network","c":"MultiLayerPerceptron","l":"MultiLayerPerceptron(TypeOfLearning, TrainingStrategy, NeuralNetwork, InputSamples, Report)","u":"%3Cinit%3E(operations.TypeOfLearning,operations.TrainingStrategy,kernel.NeuralNetwork,operations.InputSamples,report.Report)"},{"p":"kernel","c":"NeuralNetwork","l":"NeuralNetwork()","u":"%3Cinit%3E()"},{"p":"kernel","c":"Neuron","l":"Neuron()","u":"%3Cinit%3E()"},{"p":"kernel","c":"Neuron","l":"Neuron(ActivationFunction)","u":"%3Cinit%3E(interfaces.ActivationFunction)"},{"p":"operations","c":"InputSamples","l":"next()"},{"p":"operations","c":"InputSamples","l":"nextSample()"},{"p":"kernel","c":"Output","l":"Output(int)","u":"%3Cinit%3E(int)"},{"p":"kernel","c":"Output","l":"Output(Layer)","u":"%3Cinit%3E(kernel.Layer)"},{"p":"network","c":"Perceptron","l":"Perceptron()","u":"%3Cinit%3E()"},{"p":"Utils","c":"PixelCalc","l":"PixelCalc()","u":"%3Cinit%3E()"},{"p":"report","c":"PlotGraphics","l":"plot()"},{"p":"report","c":"PlotGraphics","l":"PlotGraphics(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"report","c":"PlotGraphics","l":"PlotGraphics(int, int, float, String, String, String)","u":"%3Cinit%3E(int,int,float,java.lang.String,java.lang.String,java.lang.String)"},{"p":"report","c":"PlotGraphics","l":"PlotGraphics(int, int, float, String, String, String, double[])","u":"%3Cinit%3E(int,int,float,java.lang.String,java.lang.String,java.lang.String,double[])"},{"p":"kernel","c":"Layer","l":"populateLayer(int, ActivationFunction)","u":"populateLayer(int,interfaces.ActivationFunction)"},{"p":"kernel","c":"Connection","l":"propagate()"},{"p":"kernel","c":"Layer","l":"propagate()"},{"p":"kernel","c":"NeuralNetwork","l":"propagate()"},{"p":"kernel","c":"Neuron","l":"propagate()"},{"p":"Utils","c":"PixelCalc","l":"proporcao()"},{"p":"report","c":"PTrainingData","l":"PTrainingData(long, int, double, double[], double)","u":"%3Cinit%3E(long,int,double,double[],double)"},{"p":"kernel","c":"Neuron","l":"radomizeOutputWeight()"},{"p":"kernel","c":"Layer","l":"randomizeLayerWeights()"},{"p":"kernel","c":"NeuralNetwork","l":"randomizeWeight()"},{"p":"kernel","c":"Layer","l":"removeAllNeurons()"},{"p":"kernel","c":"NeuralNetwork","l":"removeLayer(Layer)","u":"removeLayer(kernel.Layer)"},{"p":"kernel","c":"NeuralNetwork","l":"removeLayerAt(int)"},{"p":"kernel","c":"Layer","l":"removeNeuron(Neuron)","u":"removeNeuron(kernel.Neuron)"},{"p":"report","c":"Report","l":"Report(int, int, float, int)","u":"%3Cinit%3E(int,int,float,int)"},{"p":"report","c":"PlotGraphics","l":"saveImage(String)","u":"saveImage(java.lang.String)"},{"p":"kernel","c":"Neuron","l":"setActivateValue(ActivationFunction)","u":"setActivateValue(interfaces.ActivationFunction)"},{"p":"kernel","c":"Layer","l":"setActivationFunction(ActivationFunction)","u":"setActivationFunction(interfaces.ActivationFunction)"},{"p":"report","c":"PlotGraphics","l":"setData(double[])"},{"p":"report","c":"PTrainingData","l":"setEpoch(int)"},{"p":"report","c":"PTrainingData","l":"setErrorSummary(double)"},{"p":"report","c":"Report","l":"setErrorTracking(PlotGraphics)","u":"setErrorTracking(report.PlotGraphics)"},{"p":"report","c":"Report","l":"setFontSize(int)"},{"p":"report","c":"Report","l":"setGraphResolution(int, int)","u":"setGraphResolution(int,int)"},{"p":"report","c":"Report","l":"setGraphResolution(int[])"},{"p":"report","c":"PlotGraphics","l":"setH(int)"},{"p":"operations","c":"InputSamples","l":"setIndex(int)"},{"p":"operations","c":"InputSamples","l":"setInput(Input)","u":"setInput(kernel.Input)"},{"p":"kernel","c":"NeuralNetwork","l":"setLabel(String)","u":"setLabel(java.lang.String)"},{"p":"kernel","c":"Neuron","l":"setLabel(String)","u":"setLabel(java.lang.String)"},{"p":"kernel","c":"Input","l":"setLayer(Layer)","u":"setLayer(kernel.Layer)"},{"p":"operations","c":"InputSamples","l":"setMax(double)"},{"p":"operations","c":"InputSamples","l":"setMin(double)"},{"p":"kernel","c":"Layer","l":"setNeuron(int, Neuron)","u":"setNeuron(int,kernel.Neuron)"},{"p":"report","c":"PTrainingData","l":"setNewEpochProbability(double)"},{"p":"kernel","c":"Neuron","l":"setOutConnections(ArrayList<Connection>)","u":"setOutConnections(java.util.ArrayList)"},{"p":"kernel","c":"Neuron","l":"setOutput(double)"},{"p":"Utils","c":"PixelCalc","l":"setPixelsHeight(int)"},{"p":"Utils","c":"PixelCalc","l":"setPixelsWidth(int)"},{"p":"report","c":"PlotGraphics","l":"setPlot(BufferedImage)","u":"setPlot(java.awt.image.BufferedImage)"},{"p":"Utils","c":"PixelCalc","l":"setRatio(int, int)","u":"setRatio(int,int)"},{"p":"operations","c":"TrainingNetwork","l":"setReport(Report)","u":"setReport(report.Report)"},{"p":"operations","c":"InputSamples","l":"setSamples(ArrayList<ArrayList<Double>>)","u":"setSamples(java.util.ArrayList)"},{"p":"report","c":"Report","l":"setTimeComparison(PlotGraphics)","u":"setTimeComparison(report.PlotGraphics)"},{"p":"report","c":"PTrainingData","l":"setTimestamp(long)"},{"p":"report","c":"PlotGraphics","l":"setTitle(String)","u":"setTitle(java.lang.String)"},{"p":"operations","c":"TrainingNetwork","l":"setTrainingStrategies(TrainingStrategy)","u":"setTrainingStrategies(operations.TrainingStrategy)"},{"p":"operations","c":"TrainingNetwork","l":"setTypeOfLearning(TypeOfLearning)","u":"setTypeOfLearning(operations.TypeOfLearning)"},{"p":"report","c":"PlotGraphics","l":"setU(PlotGraphics.Universe)","u":"setU(report.PlotGraphics.Universe)"},{"p":"kernel","c":"Input","l":"setValues(ArrayList<Double>)","u":"setValues(java.util.ArrayList)"},{"p":"report","c":"PlotGraphics","l":"setW(int)"},{"p":"kernel","c":"Connection","l":"setWeightValue(double)"},{"p":"report","c":"PTrainingData","l":"setWeightVariationByLayer(double[])"},{"p":"report","c":"PlotGraphics","l":"setxLabel(String)","u":"setxLabel(java.lang.String)"},{"p":"report","c":"PlotGraphics","l":"setyLabel(String)","u":"setyLabel(java.lang.String)"},{"p":"kernel","c":"NeuralNetwork","l":"showInfo(boolean)"},{"p":"activationfunctions","c":"Sigmoid","l":"Sigmoid()","u":"%3Cinit%3E()"},{"p":"network","c":"MultiLayerPerceptron","l":"startTraining()"},{"p":"operations","c":"TrainingNetwork","l":"startTraining()"},{"p":"activationfunctions","c":"Step","l":"Step()","u":"%3Cinit%3E()"},{"p":"operations","c":"TypeOfLearning","l":"SUPERVISIONED"},{"p":"kernel","c":"NeuralNetwork","l":"training()"},{"p":"operations","c":"TrainingNetwork","l":"TrainingNetwork(NeuralNetwork)","u":"%3Cinit%3E(kernel.NeuralNetwork)"},{"p":"operations","c":"TrainingNetwork","l":"TrainingNetwork(TypeOfLearning, TrainingStrategy, NeuralNetwork, InputSamples, Report)","u":"%3Cinit%3E(operations.TypeOfLearning,operations.TrainingStrategy,kernel.NeuralNetwork,operations.InputSamples,report.Report)"},{"p":"operations","c":"TypeOfLearning","l":"UNSUPERVISIONED"},{"p":"operations","c":"UsingNetwork","l":"UsingNetwork()","u":"%3Cinit%3E()"},{"p":"operations","c":"TrainingStrategy","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"operations","c":"TypeOfLearning","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"kernel","c":"Input","l":"values"},{"p":"operations","c":"TrainingStrategy","l":"values()"},{"p":"operations","c":"TypeOfLearning","l":"values()"}];updateSearchResults();